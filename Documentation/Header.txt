// src/components/Header.tsx

import React, { useState } from 'react';
import { NavLink, useNavigate } from 'react-router-dom';
import { Button } from './ui/button';
import { useAuth } from '../hooks/useAuth';
import { Heart, Menu, X } from 'lucide-react';

const Header: React.FC = () => {
  const { isLoggedIn, setIsLoggedIn } = useAuth();
  const navigate = useNavigate();
  
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  const handleLogout = () => {
    // Limpamos o token ao deslogar
    localStorage.removeItem('authToken'); 
    setIsLoggedIn(false);
    setIsMobileMenuOpen(false);
    navigate('/');
  };

  const handleNavClick = (path: string) => {
    setIsMobileMenuOpen(false);
    navigate(path);
  };

  return (
    <header className="bg-background/95 fixed top-0 w-full z-50 border-b border-border mb-16">
      <div className="container mx-auto px-4 py-4 flex items-center justify-between">
        {/* Logo */}
        <NavLink to="/" className="flex items-center space-x-2" onClick={() => setIsMobileMenuOpen(false)}>
          <Heart className="h-6 w-6 text-primary fill-current" />
          <span className="text-xl font-bold text-white">MyExtasyClub</span>
        </NavLink>

        {/* --- 1. ALTERAÇÃO NO MENU DESKTOP --- */}
        <nav className="hidden md:flex items-center space-x-6">
          {/* Links Protegidos */}
          {isLoggedIn && (
            <>
              <NavLink to="/dashboard" className={({ isActive }) => `text-sm font-medium transition-colors ${isActive ? 'text-primary' : 'text-white hover:text-gray-300'}`}>Dashboard</NavLink>
              <NavLink to="/sugestoes" className={({ isActive }) => `text-sm font-medium transition-colors ${isActive ? 'text-primary' : 'text-white hover:text-gray-300'}`}>Sugestões</NavLink>
              <NavLink to="/explorar" className={({ isActive }) => `text-sm font-medium transition-colors ${isActive ? 'text-primary' : 'text-white hover:text-gray-300'}`}>Explorar</NavLink>
              <NavLink to="/lives" className={({ isActive }) => `text-sm font-medium transition-colors ${isActive ? 'text-primary' : 'text-white hover:text-gray-300'}`}>Lives</NavLink>
            </>
          )}
          {/* Links Públicos */}
          <NavLink to="/planos" className={({ isActive }) => `text-sm font-medium transition-colors ${isActive ? 'text-primary' : 'text-white hover:text-gray-300'}`}>Planos</NavLink>
        </nav>
        
        {/* Botões de Autenticação para Desktop */}
        <div className="hidden md:flex items-center space-x-2">
            {isLoggedIn ? (
                <Button onClick={handleLogout} variant="ghost" className="text-white">Sair</Button>
            ) : (
                <>
                    <NavLink to="/entrar"><Button variant="ghost" className="text-white">Entrar</Button></NavLink>
                    <NavLink to="/cadastrar"><Button>Cadastrar</Button></NavLink>
                </>
            )}
        </div>

        {/* Botão do menu mobile (Hamburguer) */}
        <div className="md:hidden">
          <button onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)} className="text-white">
            {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}
          </button>
        </div>
      </div>

      {/* --- 2. ALTERAÇÃO NO MENU MOBILE --- */}
      {isMobileMenuOpen && (
        <div className="md:hidden bg-background border-t border-border">
          <nav className="flex flex-col space-y-2 p-4">
            
            {/* Links Protegidos no Mobile */}
            {isLoggedIn && (
                <>
                    <NavLink to="/dashboard" onClick={() => handleNavClick('/dashboard')} className="text-white hover:text-primary py-2">Dashboard</NavLink>
                    <NavLink to="/sugestoes" onClick={() => handleNavClick('/sugestoes')} className="text-white hover:text-primary py-2">Sugestões</NavLink>
                    <NavLink to="/explorar" onClick={() => handleNavClick('/explorar')} className="text-white hover:text-primary py-2">Explorar</NavLink>
                    <NavLink to="/lives" onClick={() => handleNavClick('/lives')} className="text-white hover:text-primary py-2">Lives</NavLink>
                </>
            )}

            {/* Links Públicos no Mobile */}
            <NavLink to="/planos" onClick={() => handleNavClick('/planos')} className="text-white hover:text-primary py-2">Planos</NavLink>
            
            {/* Divisória e botões de autenticação no menu mobile */}
            <div className="border-t border-gray-700 pt-4 mt-2 flex flex-col space-y-2">
                 {isLoggedIn ? (
                    <Button onClick={handleLogout} variant="ghost" className="text-white justify-start">Sair</Button>
                ) : (
                    <>
                        <NavLink to="/entrar" onClick={() => handleNavClick('/entrar')}><Button variant="ghost" className="text-white w-full justify-start">Entrar</Button></NavLink>
                        <NavLink to="/cadastrar" onClick={() => handleNavClick('/cadastrar')}><Button className="w-full">Cadastrar</Button></NavLink>
                    </>
                )}
            </div>
          </nav>
        </div>
      )}
    </header>
  );
};

export default Header;